{"version":3,"file":"server.bundle.mjs","mappings":";;;;;;;;;;;;;;;AAAO,IAAMA,IAAI,GAAG,IAAI;AAEjB,IAAMC,MAAM,GAAG,CAAC,OAAO,CAAC;;;;;;;;;;ACF/B;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;;;ACNA;AAC8B;AACN;AACA,CAAC;AACL,CAAK;AACS;AACc;AAEhD,IAAMM,GAAG,GAAGL,8CAAO,CAAC,CAAC;AACrB,IAAMM,IAAI,GAAGR,mDAAI;;AAEjB;AACA,IAAMS,UAAU,GAAGH,kDAAa,CAACI,sEAAe,CAAC;AACjD,IAAMG,SAAS,GAAGT,mDAAY,CAACK,UAAU,CAAC;;AAE1C;AACAF,GAAG,CAACQ,GAAG,CAACZ,2CAAI,CAAC,CAAC,CAAC;;AAEf;AACAI,GAAG,CAACS,GAAG,CAAC,QAAQ,EAAE,UAACC,OAAO,EAAEC,QAAQ,EAAK;EAErC,IAAIC,QAAQ;EACZ,IAAMC,QAAQ,GAAGC,MAAM,CAACC,IAAI,CAACL,OAAO,CAACM,KAAK,CAAC,CAAC,CAAC,CAAC;EAC9C,IAAItB,qDAAM,CAACuB,QAAQ,CAACJ,QAAQ,CAAC,EAAE;IAC3B,IAAMK,UAAU,GAAGJ,MAAM,CAACK,MAAM,CAACT,OAAO,CAACM,KAAK,CAAC,CAAC,CAAC,CAAC;IAClD;IACAJ,QAAQ,GAAIF,OAAO,CAACM,KAAK,IAAIH,QAAQ,MAAAO,MAAA,CAAOF,UAAU,aAAU,IAAI;EACxE;;EAEA;EACA,IAAI,CAACN,QAAQ,EAAE;IACX,OAAOD,QAAQ,CAACU,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAACC,KAAK,EAAE;IAA+C,CAAC,CAAC;EAC9F;;EAEA;EACA,IAAMC,QAAQ,GAAG3B,gDAAS,CAACS,SAAS,mBAAAc,MAAA,CAAmBP,QAAQ,GAAID,QAAQ,CAAC;;EAE5E;EACAd,gDAAS,CAAC0B,QAAQ,EAAE1B,qDAAY,CAAC8B,IAAI,EAAE,UAACC,GAAG,EAAK;IAC5C,IAAIA,GAAG,EAAE;MACL,OAAOlB,QAAQ,CAACU,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAACC,KAAK,UAAAH,MAAA,CAAUR,QAAQ;MAAa,CAAC,CAAC;IAC5E;;IAEA;IACAd,kDAAW,CAAC0B,QAAQ,EAAE,MAAM,EAAE,UAACK,GAAG,EAAEE,IAAI,EAAK;MACzC,IAAIF,GAAG,EAAE;QACL,OAAOlB,QAAQ,CAACU,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;UAACC,KAAK,EAAE;QAAyB,CAAC,CAAC;MACxE;;MAEA;MACAZ,QAAQ,CAACW,IAAI,CAACU,IAAI,CAACC,KAAK,CAACF,IAAI,CAAC,CAAC;IACnC,CAAC,CAAC;EACN,CAAC,CAAC;AACN,CAAC,CAAC;;AAEF;AACA/B,GAAG,CAACkC,MAAM,CAACjC,IAAI,EAAE,YAAM;EACnBkC,OAAO,CAACC,GAAG,2BAA2B,CAAC;AAC3C,CAAC,CAAC,C","sources":["webpack://react-express-app/./src/constants.js","webpack://react-express-app/external commonjs \"cors\"","webpack://react-express-app/external commonjs \"express\"","webpack://react-express-app/external commonjs \"fs\"","webpack://react-express-app/external commonjs \"path\"","webpack://react-express-app/external commonjs \"url\"","webpack://react-express-app/webpack/bootstrap","webpack://react-express-app/webpack/runtime/compat get default export","webpack://react-express-app/webpack/runtime/define property getters","webpack://react-express-app/webpack/runtime/hasOwnProperty shorthand","webpack://react-express-app/webpack/runtime/make namespace object","webpack://react-express-app/./server.js"],"sourcesContent":["export const PORT = 3000;\r\n\r\nexport const PARAMS = [\"users\"];","module.exports = require(\"cors\");","module.exports = require(\"express\");","module.exports = require(\"fs\");","module.exports = require(\"path\");","module.exports = require(\"url\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// server.js\r\nimport express from 'express';\r\nimport cors from 'cors';\r\nimport path from 'path'; // Import the path module to work with file paths\r\nimport fs from 'fs';     // Import the fs module to read files\r\nimport {fileURLToPath} from 'url';\r\nimport {PARAMS, PORT} from \"./src/constants.js\";\r\n\r\nconst app = express();\r\nconst port = PORT;\r\n\r\n// import.meta.url and path module: You can create a workaround to define __dirname in ES modules using import.meta.url and the path module\r\nconst __filename = fileURLToPath(import.meta.url);\r\nconst __dirname = path.dirname(__filename);\r\n\r\n// Enable CORS\r\napp.use(cors());\r\n\r\n// Endpoint for '/entry' route\r\napp.get('/entry', (request, response) => {\r\n\r\n    let fileName;\r\n    const queryKey = Object.keys(request.query)[0];\r\n    if (PARAMS.includes(queryKey)) {\r\n        const queryValue = Object.values(request.query)[0];\r\n        // Read the query parameter (e.g., ?hello or ?hi)\r\n        fileName = (request.query && queryKey) ? `${queryValue}.json` : null;\r\n    }\r\n\r\n    // If no valid query parameter is provided, return an error\r\n    if (!fileName) {\r\n        return response.status(400).json({error: 'Invalid query parameter. Use proper param key'});\r\n    }\r\n\r\n    // Build the full path to the JSON file\r\n    const filePath = path.join(__dirname, `src/resources/${queryKey}`, fileName);\r\n\r\n    // Check if the file exists\r\n    fs.access(filePath, fs.constants.F_OK, (err) => {\r\n        if (err) {\r\n            return response.status(404).json({error: `File ${fileName} not found.`});\r\n        }\r\n\r\n        // Read the JSON file and send it as a response\r\n        fs.readFile(filePath, 'utf8', (err, data) => {\r\n            if (err) {\r\n                return response.status(500).json({error: 'Error reading the file.'});\r\n            }\r\n\r\n            // Parse the JSON and send it as the response\r\n            response.json(JSON.parse(data));\r\n        });\r\n    });\r\n});\r\n\r\n// Start the server\r\napp.listen(port, () => {\r\n    console.log(`Server running at /entry`);\r\n});\r\n"],"names":["PORT","PARAMS","express","cors","path","fs","fileURLToPath","app","port","__filename","import","meta","url","__dirname","dirname","use","get","request","response","fileName","queryKey","Object","keys","query","includes","queryValue","values","concat","status","json","error","filePath","join","access","constants","F_OK","err","readFile","data","JSON","parse","listen","console","log"],"sourceRoot":""}